ADD xmanylinux-common/fix.sh fix.sh

RUN bash fix.sh

RUN rm fix.sh

RUN yum -y install xz

ENV PATH="/opt/python/cp27-cp27mu/bin/:${PATH}"
ENV LD_LIBRARY_PATH="/opt/python/cp27-cp27mu/lib/:${LD_LIBRARY_PATH}"

# LLVM & Clang
RUN curl -OL https://releases.llvm.org/6.0.0/llvm-6.0.0.src.tar.xz \
    && xz --decompress llvm-6.0.0.src.tar.xz && tar xf llvm-6.0.0.src.tar \
    && rm llvm-6.0.0.src.tar \
    && cd llvm-6.0.0.src \
    && mkdir cbuild && cd cbuild \
    && ARCH=$([[ "$DEFAULT_DOCKCROSS_IMAGE" = *"-x86" ]] && echo "i686" || echo "x86_64") \
    && cmake ../ -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=/opt/llvm60 -DLLVM_TARGETS_TO_BUILD="X86" -DLLVM_DEFAULT_TARGET_TRIPLE=${ARCH}-unknown-linux-gnu \
    && cmake --build . -- -j4 && cmake --build . --target install \
    && cd .. && cd .. && rm -rf llvm-6.0.0.src && ldconfig

RUN curl -OL https://releases.llvm.org/6.0.0/cfe-6.0.0.src.tar.xz \
    && xz --decompress cfe-6.0.0.src.tar.xz && tar xf cfe-6.0.0.src.tar \
    && rm cfe-6.0.0.src.tar \
    && cd cfe-6.0.0.src \
    && curl -OL https://releases.llvm.org/6.0.0/clang-tools-extra-6.0.0.src.tar.xz \
    && xz --decompress clang-tools-extra-6.0.0.src.tar.xz && tar xf clang-tools-extra-6.0.0.src.tar \
    && rm clang-tools-extra-6.0.0.src.tar \
    && mv clang-tools-extra-6.0.0.src tools/extra \
    && mkdir cbuild && cd cbuild \
    && ARCH=$([[ "$DEFAULT_DOCKCROSS_IMAGE" = *"-x86" ]] && echo "i686" || echo "x86_64") \
    && cmake ../ -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=/opt/llvm60 -DLLVM_TARGETS_TO_BUILD="X86" -DLLVM_DEFAULT_TARGET_TRIPLE=${ARCH}-unknown-linux-gnu \
    && cmake --build . -- -j4 && cmake --build . --target install \
    && cd .. && cd .. && rm -rf cfe-6.0.0.src && ldconfig

RUN curl -OL https://releases.llvm.org/6.0.0/lld-6.0.0.src.tar.xz \
    && xz --decompress lld-6.0.0.src.tar.xz && tar xf lld-6.0.0.src.tar \
    && rm lld-6.0.0.src.tar \
    && cd lld-6.0.0.src \
    && mkdir cbuild && cd cbuild \
    && cmake ../ -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=/opt/llvm60 \
    && cmake --build . -- -j4 && cmake --build . --target install \
    && cd .. && cd .. && rm -rf lld-6.0.0.src && ldconfig

# Missing base libraries and software
RUN yum install -y libX11-devel libXau-devel libXext-devel libXrender-devel libXt-devel

RUN yum install -y libxslt

RUN curl -OL https://xcb.freedesktop.org/dist/xcb-proto-1.7.1.tar.gz \
    && tar xvf xcb-proto-1.7.1.tar.gz \
    && rm xcb-proto-1.7.1.tar.gz \
    && cd xcb-proto-1.7.1 \
    && ./configure --prefix=/usr --libdir=/usr/$LIB_DIR --enable-static --enable-shared CFLAGS=-fPIC \
    && make -j4 && make install \
    && cd .. && rm -rf xcb-proto-1.7.1 && ldconfig

RUN curl -OL https://xcb.freedesktop.org/dist/libpthread-stubs-0.3.tar.gz \
    && tar xvf libpthread-stubs-0.3.tar.gz \
    && rm libpthread-stubs-0.3.tar.gz \
    && cd libpthread-stubs-0.3 \
    && ./configure --prefix=/usr --libdir=/usr/$LIB_DIR --enable-static --enable-shared CFLAGS=-fPIC \
    && make -j3 && make install \
    && cd .. && rm -rf libpthread-stubs-0.3 && ldconfig

RUN curl -OL https://xcb.freedesktop.org/dist/libxcb-1.8.1.tar.gz \
    && tar xvf libxcb-1.8.1.tar.gz \
    && rm libxcb-1.8.1.tar.gz \
    && cd libxcb-1.8.1 \
    && ./configure --prefix=/usr --libdir=/usr/$LIB_DIR --enable-static --enable-shared CFLAGS=-fPIC \
    && make -j4 && make install \
    && cd .. && rm -rf libxcb-1.8.1 && ldconfig

RUN yum install -y fontconfig-devel

RUN yum -y install pcre-devel

# Java
RUN cd /opt/ \
    && URL=$([[ "$DEFAULT_DOCKCROSS_IMAGE" = *"-x86" ]] && echo "https://download.bell-sw.com/java/8u202/bellsoft-jdk8u202-linux-i586.tar.gz" || echo "https://download.bell-sw.com/java/8u202/bellsoft-jdk8u202-linux-amd64.tar.gz") \
    && curl -L "${URL}" --output jdk-8u202-linux.tar.gz \
    && tar xzf jdk-8u202-linux.tar.gz --no-same-owner --no-same-permissions \
    && chmod 755 jdk8u202 \
    && rm jdk-8u202-linux.tar.gz

# Maven
RUN cd /opt \
    && curl -OL https://repo.maven.apache.org/maven2/org/apache/maven/apache-maven/3.3.9/apache-maven-3.3.9-bin.tar.gz \
    && tar xzf apache-maven-3.3.9-bin.tar.gz \
    && rm apache-maven-3.3.9-bin.tar.gz

# Ant
RUN cd /opt \
    && curl -OL https://mirror.ibcp.fr/pub/apache//ant/binaries/apache-ant-1.10.8-bin.tar.gz \
    && tar xzf apache-ant-1.10.8-bin.tar.gz \
    && rm apache-ant-1.10.8-bin.tar.gz

# Swig
RUN curl -OL https://downloads.sourceforge.net/project/swig/swig/swig-3.0.12/swig-3.0.12.tar.gz \
    && tar xvf swig-3.0.12.tar.gz \
    && rm swig-3.0.12.tar.gz \
    && cd swig-3.0.12 \
    && ./configure --prefix=/usr --libdir=/usr/$LIB_DIR \
    && make -j4 && make install \
    && cd .. && rm -rf swig-3.0.12 && ldconfig

# OpenMP
ADD xmanylinux-common/0001-openmp-6.0.0.patch /tmp/0001-openmp-6.0.0.patch

RUN wget http://releases.llvm.org/6.0.0/openmp-6.0.0.src.tar.xz \
    && xz --decompress openmp-6.0.0.src.tar.xz && tar xf openmp-6.0.0.src.tar \
    && rm openmp-6.0.0.src.tar \
    && cd openmp-6.0.0.src \
    && patch -p1 < /tmp/0001-openmp-6.0.0.patch \
    && rm /tmp/0001-openmp-6.0.0.patch \
    && mkdir cbuild && cd cbuild \
    && CXXFLAGS="-fPIC" CFLAGS="-fPIC" cmake ../ -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=/usr -DCMAKE_INSTALL_LIBDIR=$LIB_DIR \
    && CXXFLAGS="-fPIC" CFLAGS="-fPIC" cmake --build . -- -j4 && CXXFLAGS="-fPIC" CFLAGS="-fPIC" cmake --build . --target install \
    && cd .. && cd .. && rm -rf openmp-6.0.0.src && ldconfig

# XSD
RUN URL=$([[ "$DEFAULT_DOCKCROSS_IMAGE" = *"-x86" ]] && echo "https://www.codesynthesis.com/download/xsd/4.0/linux-gnu/i686/xsd-4.0.0-i686-linux-gnu.tar.bz2" || echo "https://www.codesynthesis.com/download/xsd/4.0/linux-gnu/x86_64/xsd-4.0.0-x86_64-linux-gnu.tar.bz2") \
    && BASE=$([[ "$DEFAULT_DOCKCROSS_IMAGE" = *"-x86" ]] && echo "xsd-4.0.0-i686-linux-gnu" || echo "xsd-4.0.0-x86_64-linux-gnu") \
    && curl -OL ${URL} \
    && tar xvf ${BASE}.tar.bz2 \
    && rm ${BASE}.tar.bz2 \
    && cp -R ${BASE}/bin/* /usr/bin \
    && cp -R ${BASE}/libxsd/* /usr/include \
    && rm -rf ${BASE}

# CppCheck
RUN curl -OL https://github.com/diorcety/cppcheck/archive/1.85.tar.gz \
    && tar xvf 1.85.tar.gz \
    && rm 1.85.tar.gz \
    && cd cppcheck-1.85 \
    && mkdir cbuild && cd cbuild \
    && cmake ../ -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=/opt/cppcheck \
    && cmake --build . -- -j4 && cmake --build . --target install \
    && cd .. && cd .. && rm -rf cppcheck-1.85 && ldconfig

# Sonar scanner
RUN curl -OL https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-3.2.0.1227-linux.zip \
    && unzip sonar-scanner-cli-3.2.0.1227-linux.zip \
    && rm sonar-scanner-cli-3.2.0.1227-linux.zip \
    && mv sonar-scanner-3.2.0.1227-linux /opt/sonar

# Remove six from python
RUN LD_LIBRARY_PATH=/opt/python/cp27-cp27m/lib /opt/python/cp27-cp27m/bin/python -m pip uninstall -y six pyparsing
RUN LD_LIBRARY_PATH=/opt/python/cp27-cp27mu/lib /opt/python/cp27-cp27mu/bin/python -m pip uninstall -y six pyparsing
RUN LD_LIBRARY_PATH=/opt/python/cp34-cp34m/lib /opt/python/cp34-cp34m/bin/python -m pip uninstall -y six pyparsing
RUN LD_LIBRARY_PATH=/opt/python/cp35-cp35m/lib /opt/python/cp35-cp35m/bin/python -m pip uninstall -y six pyparsing
RUN LD_LIBRARY_PATH=/opt/python/cp36-cp36m/lib /opt/python/cp36-cp36m/bin/python -m pip uninstall -y six pyparsing
RUN LD_LIBRARY_PATH=/opt/python/cp37-cp37m/lib /opt/python/cp37-cp37m/bin/python -m pip uninstall -y six pyparsing

# Stip is broken
RUN rm /usr/bin/strip && ln -s /opt/rh/devtoolset-2/root/usr/bin/strip /usr/bin/strip

# Reset PATH
ENV PATH="/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
ENV LD_LIBRARY_PATH="/usr/local/$LIB_DIR:/usr/local/lib"

# Don't run preexec
RUN rm /dockcross/pre_exec.sh
